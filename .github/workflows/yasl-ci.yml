# .github/workflows/ci.yml
name: YASL CI
permissions:
  contents: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  yasl-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Setup environment with uv
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -e .[dev]

      - name: Run unit tests
        run: |
          uv run pytest --cov=src/yasl --cov-report=xml --cov-fail-under=75 tests/yasl

      - name: Check formatting with ruff
        run: |
          uv run ruff check src/yasl tests/yasl

      - name: Run BDD tests with Behave
        run: |
          cd features
          uv run behave
          cd ..

      - name: Check CLI tool
        run: |
          uv run yasl --version
          uv run yasl --help

  yaql-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Setup environment with uv
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -e .[dev]
        
  yarl-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Setup environment with uv
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -e .[dev]

  verify-build:
    needs: [yasl-ci, yaql-ci, yarl-ci]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Or your desired Python version

      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Setup environment with uv
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -e .[dev]

      - name: Get current version from pyproject.toml
        id: get_version
        run: |
          uv run python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])" > version.txt
          echo "version=$(cat version.txt)" >> $GITHUB_OUTPUT

      - name: Get previous version from main branch
        id: get_prev_version
        run: |
          git fetch origin main
          git show origin/main:pyproject.toml > prev_pyproject.toml
          uv run python -c "import toml; print(toml.load('prev_pyproject.toml')['project']['version'])" > prev_version.txt
          echo "prev_version=$(cat prev_version.txt)" >> $GITHUB_OUTPUT

      - name: Check version increment
        if: github.event_name == 'pull_request'
        run: |
          CURR=$(cat version.txt)
          PREV=$(cat prev_version.txt)
          if [ "$CURR" = "$PREV" ]; then
            echo "Version has not been incremented from previous release ($PREV)."
            exit 1
          fi
        
      - name: Build package
        run: |
          uv run python -m build

      - name: Tag the repo with version
        if: github.ref == 'refs/heads/main'
        run: |
          VERSION=$(cat version.txt)
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "v$VERSION"
          git push origin "v$VERSION"

