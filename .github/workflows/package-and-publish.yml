# .github/workflows/behave-tests.yml
name: YAML-TOOLS Package and Publish
permissions:
  contents: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  package-and-publish:
    needs: yasl-build-test-format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Or your desired Python version

      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Setup environment with uv
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -e .[dev]

      - name: Get current version from pyproject.toml
        id: get_version
        run: |
          python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])" > version.txt
          echo "version=$(cat version.txt)" >> $GITHUB_OUTPUT

      - name: Get previous version from main branch
        id: get_prev_version
        run: |
          git fetch origin main
          git show origin/main:pyproject.toml > prev_pyproject.toml
          python -c "import toml; print(toml.load('prev_pyproject.toml')['project']['version'])" > prev_version.txt
          echo "prev_version=$(cat prev_version.txt)" >> $GITHUB_OUTPUT

      - name: Check version increment
        if: github.event_name == 'pull_request'
        run: |
          CURR=$(cat version.txt)
          PREV=$(cat prev_version.txt)
          if [ "$CURR" = "$PREV" ]; then
            echo "Version has not been incremented from previous release ($PREV)."
            exit 1
          fi
        
      - name: Build package
        run: |
          uv run python -m build

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: yaml-tools-dist
          path: dist/*

      - name: Draft Release Notes
        uses: release-drafter/release-drafter@v6
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release and Upload Assets
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}